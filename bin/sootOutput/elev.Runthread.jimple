public class elev.Runthread extends java.lang.Thread implements elev.ElevatorObject
{

    public void <init>()
    {
        elev.Runthread r0;

        r0 := @this: elev.Runthread;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        return;
    }

    public void run()
    {
        elev.Runthread r0;
        javax.swing.JFrame $r1, r2;
        elev.Draw r3, $r5;
        boolean z0;
        int i0, $i5, i6, $i7, $i8;
        long l1, l2, $l3, $l4;
        java.lang.InterruptedException r4, $r16;
        java.io.PrintStream $r7, $r11;
        java.lang.StringBuilder $r8, $r9, $r12, $r14;
        java.lang.String $r10, $r15;
        elev.elevator $r13;

        r0 := @this: elev.Runthread;
        $r1 = new javax.swing.JFrame;
        specialinvoke $r1.<javax.swing.JFrame: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<javax.swing.JFrame: void setTitle(java.lang.String)>("Elevator");
        virtualinvoke r2.<javax.swing.JFrame: void setSize(int,int)>(700, 700);
        $r5 = new elev.Draw;
        specialinvoke $r5.<elev.Draw: void <init>()>();
        r3 = $r5;
        virtualinvoke r2.<javax.swing.JFrame: java.awt.Component add(java.awt.Component)>(r3);
        virtualinvoke r2.<javax.swing.JFrame: void setDefaultCloseOperation(int)>(3);
        virtualinvoke r2.<javax.swing.JFrame: void setVisible(boolean)>(1);
        z0 = 0;
        i0 = 0;
        l1 = 0L;
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label0:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l4 = $l3 - l2;
        $i5 = (int) $l4;
        i6 = $i5 / 100;
        virtualinvoke r3.<elev.Draw: void upDate(int)>(i6);
        virtualinvoke r3.<elev.Draw: void repaint()>();
        $i7 = i6 - i0;
        if $i7 != 8 goto label1;

        i0 = i6;
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Current time: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
        $r11 = <java.lang.System: java.io.PrintStream out>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("STATE:");
        $r13 = r3.<elev.Draw: elev.elevator machine>;
        $i8 = virtualinvoke $r13.<elev.elevator: int getState()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(5L);

     label2:
        goto label0;

     label3:
        $r16 := @caughtexception;
        r4 = $r16;
        virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
        goto label0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        elev.Runthread $r1, r2;

        r0 := @parameter0: java.lang.String[];
        $r1 = new elev.Runthread;
        specialinvoke $r1.<elev.Runthread: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<elev.Runthread: void start()>();
        return;
    }
}
